{"version":3,"sources":["serviceWorker.js","constants/routes.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","HOME","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","concat","users","app","initializeApp","database","_ref","type","onClick","AuthUserContext","withAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","authUser","inherits","createClass","key","value","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","NavigationAuth","react_router_dom","to","ROUTES","components_SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Landing","INITIAL_STATE","username","passwordOne","passwordTwo","SignUpFormBase","onSubmit","event","_this$state","set","objectSpread","preventDefault","onChange","defineProperty","target","name","_this$state2","isInvalid","placeholder","disabled","message","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignIn","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","PasswordChangeForm","PasswordChange","AdminPage","loading","on","snapshot","usersObject","val","usersList","keys","map","off","Admin_UserList","UserList","components_Navigation","react_router","exact","path","component","LandingPage","SignInPage","HomePage","AccountPage","ReactDOM","render","context","components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3b93190b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const LANDING = '/Landing';\nexport const SIGN_UP = '/SignUp';\nexport const SIGN_IN = '/SignIn';\nexport const HOME = '/Home';\nexport const ACCOUNT = '/Account';\nexport const ADMIN = '/Admin';\nexport const PASSWORD_FORGET = '/PasswordForget';","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext; \n\n","import app from 'firebase/app';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyA5nEURi_rJd_w-IGf6_tucjAhWkXxJzxM\",\n    authDomain: \"drona-sign.firebaseapp.com\",\n    databaseURL: \"https://drona-sign.firebaseio.com\",\n    projectId: \"drona-sign\",\n    storageBucket: \"drona-sign.appspot.com\",\n    messagingSenderId: \"214647349680\",\n    appId: \"1:214647349680:web:62fdb561a550b0f7\"\n  };\n\n  class Firebase {\n      constructor() {\n          app.initializeApp(config);\n\n          this.auth = app.auth();\n          this.db = app.database(); \n      }\n  \n        // *** Auth API ***\n\n        doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n\n        doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password); \n\n        doSignOut = () => this.auth.signOut(); \n\n        doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n        doPasswordUpdate = password => this.auth.currentUser.updatePassword(password); \n  \n        user = uid => this.db.ref(`users/${uid}`);\n\n        users = () => this.db.ref('users');\n  \n    }\n  \nexport default Firebase; \n\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n\n","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SignOut = ({ firebase }) => (\n    <button type=\"button\" onClick={firebase.doSignOut}>\n        Sign Out\n    </button>\n);\n\nexport default withFirebase(SignOut);","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = () => Component => {\n    class withAuthentication extends React.Component {\n        constructor(props) {\n            super(props);\n\n            this.state = { authUser: null, };\n        }\n    \n    componentDidMount() {\n        this.listener = this.props.firebase.auth.onAuthStateChanged(\n            authUser => {\n                authUser\n                    ? this.setState({ authUser })\n                    : this.setState({ authUser: null});\n            },\n        );\n    }\n    \n    componentWillUnmount() {\n        this.listener();\n    }\n    \n    render() {\n        return (\n            <AuthUserContext.Provider value={this.state.authUser}>\n                <Component {...this.props} />\n            </AuthUserContext.Provider>\n        );\n    }\n}\n\n    return withFirebase(withAuthentication);\n};\n\nexport default withAuthentication;\n\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;","import React from 'react'; \nimport { Link } from 'react-router-dom'; \n\nimport * as ROUTES from '../../constants/routes';  \nimport SignOut from '../SignOut';\nimport { AuthUserContext } from '../Session';\nimport SignOutButton from '../SignOut';\n\n\nconst Navigation = () => (\n  <div>\n      <AuthUserContext.Consumer>\n          {authUser => \n          authUser ? <NavigationAuth /> : <NavigationNonAuth />} \n      </AuthUserContext.Consumer>\n  </div>\n);\n  \nconst NavigationAuth = () => (\n  <ul>\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavigationNonAuth = () => (\n  <ul>\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\n\n\n\nexport default Navigation;","import React from 'react';\n\nconst Landing = () => (\n  <div>\n    <h1>Landing</h1>\n  </div>\n);\n\nexport default Landing;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        return this.props.firebase.user(authUser.user.uid).set({ username, email});\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE});\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport {SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase} from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignIn = () => (\n  <div>\n    <h1>Sign In</h1>\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n};\n\nclass SignInFormBase extends Component {\n    constructor(props) { \n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n             })\n            .catch(error => {\n                this.setState({ error });\n            });\n        \n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value});\n    };\n\n    render() {\n        const { email, password, error } = this.state; \n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <form onSubmit={this.onSubmit}>\n                <input\n                    name= \"email\"\n                    value={email}\n                    onChange={this.onChange}\n                    type=\"text\"\n                    placeholder=\"Email Address\"\n                />\n                <input\n                    name=\"password\"\n                    value={password}\n                    onChange={this.onChange}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n                <button disabled={isInvalid} type=\"submit\">\n                    Sign In\n                </button>\n\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\nconst SignInForm = compose(\n    withRouter,\n    withFirebase,\n)(SignInFormBase);\n\nexport default SignIn;\n\nexport { SignInForm };","import React from 'react';\n\nimport { withAuthorization } from '../Session';\n\nconst HomePage = () => (\n  <div>\n    <h1>Home Page</h1>\n    <p>The Home Page is accessible by every signed in user.</p>\n  </div>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(HomePage);","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);\n\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <div>\n        <h1>Admin</h1>\n\n        {loading && <div>Loading ...</div>}\n\n        <UserList users={users} />\n      </div>\n    );\n  }\n}\n\nconst UserList = ({ users }) => (\n  <ul>\n    {users.map(user => (\n      <li key={user.uid}>\n        <span>\n          <strong>ID:</strong> {user.uid}\n        </span>\n        <span>\n          <strong>E-Mail:</strong> {user.email}\n        </span>\n        <span>\n          <strong>Username:</strong> {user.username}\n        </span>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default withFirebase(AdminPage);\n\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,\n} from 'react-router-dom';\n \nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\n\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\n\nconst App = () => (\n    <Router>\n      <div>\n        <Navigation />\n  \n        <hr />\n  \n        <Route exact path={ROUTES.LANDING} component={LandingPage} />\n        <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n        <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n        <Route\n          exact\n          path={ROUTES.PASSWORD_FORGET}\n          component={PasswordForgetPage}\n        />\n        <Route exact path={ROUTES.HOME} component={HomePage} />\n        <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\n        <Route exact path={ROUTES.ADMIN} component={AdminPage} />\n      </div>\n    </Router>\n  );\n  \nexport default withAuthentication(App);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'),\n);\n\n\nserviceWorker.register();\n"],"sourceRoot":""}